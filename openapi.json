{
  "openapi": "3.0.1",
  "info": {
    "title": "Hibit API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://testnetopenapi.hibit.app"
    },
    {
      "url": "https://openapi.hibit.app"
    }
  ],
  "paths": {
    "/v1/timestamp": {
      "get": {
        "tags": ["Basic"],
        "summary": "get system timestamp",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.SystemInfo, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.SystemInfo, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.SystemInfo, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets": {
      "get": {
        "tags": ["Basic"],
        "summary": "get assets supported by Hibit",
        "parameters": [
          {
            "name": "ChainIds",
            "in": "query",
            "description": "chain ids to filter the assets list.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ChainAssetTypes",
            "in": "query",
            "description": "chain asset types to filter the assets list.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "maximum number of items to return. maximum value is 500.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "number of items to skip before starting to collect the result set.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "the sorting parameters for the list.\n\rsee https://learn.microsoft.com/en-us/azure/search/search-query-odata-orderby#examples for the format of the OrderBy string.\n\r supported sorting parameters are: \"AssetId\".\n\rdefault sorting is by \" AssetId desc\".",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/asset": {
      "get": {
        "tags": ["Basic"],
        "summary": "Get asset information by asset id",
        "parameters": [
          {
            "name": "AssetId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/asset/withdrawal-fee": {
      "get": {
        "tags": ["Basic"],
        "summary": "Get withdrawal fee information for an asset",
        "parameters": [
          {
            "name": "RootAssetId",
            "in": "query",
            "description": "The identifier for the root asset to check withdrawal fees for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TargetChain",
            "in": "query",
            "description": "The target blockchain type for the withdrawal",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TargetChainNetwork",
            "in": "query",
            "description": "The specific network on the target blockchain for the withdrawal",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.AssetWithdrawFeeInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.AssetWithdrawFeeInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.AssetWithdrawFeeInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/asset/chain-balance": {
      "get": {
        "tags": ["Basic"],
        "summary": "Get chain balance for a specific asset.\r\n<remarks>Returns the balance in the smallest unit of the asset.</remarks>",
        "parameters": [
          {
            "name": "AssetId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[System.Numerics.BigInteger, System.Runtime.Numerics, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[System.Numerics.BigInteger, System.Runtime.Numerics, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[System.Numerics.BigInteger, System.Runtime.Numerics, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chains": {
      "get": {
        "tags": ["Basic"],
        "summary": "get all chains supported by Hibit",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[System.Collections.Generic.IEnumerable`1[[Ex3.Exchange.OpenApi.AppServices.ChainInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[System.Collections.Generic.IEnumerable`1[[Ex3.Exchange.OpenApi.AppServices.ChainInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[System.Collections.Generic.IEnumerable`1[[Ex3.Exchange.OpenApi.AppServices.ChainInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/proxy-key": {
      "post": {
        "tags": ["Key"],
        "summary": "Get the proxy key",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OriginWalletRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OriginWalletRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OriginWalletRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.ProxyKeyResult, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.ProxyKeyResult, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.ProxyKeyResult, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/proxy-key/reset": {
      "post": {
        "tags": ["Key"],
        "summary": "Reset the proxy key",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OriginWalletRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OriginWalletRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OriginWalletRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.ProxyKeyResult, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.ProxyKeyResult, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.ProxyKeyResult, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/market/depth": {
      "get": {
        "tags": ["Markets"],
        "summary": "get the depth of the market",
        "description": "it is a combination of the orderbook and the swap liquidity.",
        "parameters": [
          {
            "name": "Index",
            "in": "query",
            "description": "The index of the depth.\r\nfor example, if depth levels of market is 0.01, 0.1, 1, 10, 50, 100.\r\nthen the index of 0.01 is 1, 0.1 is 2, 1 is 3, 10 is 4, 50 is 5, 100 is 6.",
            "schema": {
              "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.DepthIndexEnum"
            }
          },
          {
            "name": "MarketId",
            "in": "query",
            "description": "The market id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "limit of the depth.\r\n<remarks> Range from 1 to 100. </remarks>",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Cache.DepthManager.SpotMarketDepthDataDto, Ex3.Cache.DepthManager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Cache.DepthManager.SpotMarketDepthDataDto, Ex3.Cache.DepthManager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Cache.DepthManager.SpotMarketDepthDataDto, Ex3.Cache.DepthManager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/markets/swap": {
      "get": {
        "tags": ["Markets"],
        "summary": "get the swap information of the market",
        "parameters": [
          {
            "name": "MarketId",
            "in": "query",
            "description": "The market id. This is an optional field that specifies the market for which liquidity information is requested.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.GetSwapOutput, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.GetSwapOutput, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.GetSwapOutput, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/markets/ticker": {
      "get": {
        "tags": ["Markets"],
        "summary": "Gets the 24-hour ticker info for markets",
        "parameters": [
          {
            "name": "MarketId",
            "in": "query",
            "description": "The market id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChainIds",
            "in": "query",
            "description": "Filter markets by chain IDs (optional).",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ChainAssetTypes",
            "in": "query",
            "description": "Filter markets by chain asset types (optional).",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.Get24HrTickerOutput, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.Get24HrTickerOutput, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.Get24HrTickerOutput, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/markets/ticker/extended": {
      "get": {
        "tags": ["Markets"],
        "summary": "Gets the extended 24-hour ticker info for markets",
        "parameters": [
          {
            "name": "MarketId",
            "in": "query",
            "description": "The market id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChainIds",
            "in": "query",
            "description": "Filter markets by chain IDs (optional).",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ChainAssetTypes",
            "in": "query",
            "description": "Filter markets by chain asset types (optional).",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.Get24HrTickerOutputExtend, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.Get24HrTickerOutputExtend, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.Get24HrTickerOutputExtend, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/market/kline": {
      "get": {
        "tags": ["Markets"],
        "summary": "get the kline of the market",
        "parameters": [
          {
            "name": "MarketId",
            "in": "query",
            "description": "The market id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TickSpace",
            "in": "query",
            "description": "The start time of the kline ticks.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Ex3.Models.KLine.TickSpace"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "maximum number of items to return. maximum value is 500.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "number of items to skip before starting to collect the result set.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "the sorting parameters for the list.\n\rsee https://learn.microsoft.com/en-us/azure/search/search-query-odata-orderby#examples for the format of the OrderBy string.\n\r supported sorting parameters are: \"Timestamp\".\n\rdefault sorting is by \" Timestamp desc\".",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.KlineItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.KlineItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.KlineItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/market/trade": {
      "get": {
        "tags": ["Markets"],
        "summary": "get the trade history of the market",
        "parameters": [
          {
            "name": "MarketId",
            "in": "query",
            "description": "The market id for which the trade list is requested.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TradedAtStart",
            "in": "query",
            "description": "The start date and time for the trade list.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "TradedAtEnd",
            "in": "query",
            "description": "The end date and time for the trade list.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "maximum number of items to return. maximum value is 500.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "number of items to skip before starting to collect the result set.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "the sorting parameters for the list.\n\rsee https://learn.microsoft.com/en-us/azure/search/search-query-odata-orderby#examples for the format of the OrderBy string.\n\r supported sorting parameters are: \"TradedAt\".\n\rdefault sorting is by \" TradedAt desc\".",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.MarketTradingHistoryItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.MarketTradingHistoryItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.MarketTradingHistoryItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/markets": {
      "get": {
        "tags": ["Markets"],
        "summary": "get the market list",
        "parameters": [
          {
            "name": "ChainIds",
            "in": "query",
            "description": "chain ids to filter the markets list.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ChainAssetTypes",
            "in": "query",
            "description": "chain asset types to filter the markets list.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "BaseAssetId",
            "in": "query",
            "description": "The base asset id. This is an optional field that specifies the base asset for which the market list is requested.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "QuoteAssetId",
            "in": "query",
            "description": "The quote asset id. This is an optional field that specifies the quote asset for which the market list is requested.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "maximum number of items to return. maximum value is 500.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "number of items to skip before starting to collect the result set.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "the sorting parameters for the list.\n\rsee https://learn.microsoft.com/en-us/azure/search/search-query-odata-orderby#examples for the format of the OrderBy string.\n\r supported sorting parameters are: \"MarketId\".\n\rdefault sorting is by \" MarketId desc\".",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.MarketInfoItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.MarketInfoItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.MarketInfoItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/market": {
      "get": {
        "tags": ["Markets"],
        "summary": "get the market by market id",
        "parameters": [
          {
            "name": "MarketId",
            "in": "query",
            "description": "The market id.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.MarketInfoItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.MarketInfoItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.MarketInfoItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/order/trades": {
      "get": {
        "tags": ["Orders"],
        "summary": "get trades of the order",
        "parameters": [
          {
            "name": "OrderId",
            "in": "query",
            "description": "order id",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Collections.Pooled.PooledList`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderTradeListItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Collections.Pooled, Version=1.0.82.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Collections.Pooled.PooledList`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderTradeListItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Collections.Pooled, Version=1.0.82.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Collections.Pooled.PooledList`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderTradeListItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Collections.Pooled, Version=1.0.82.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "get orders of wallet",
        "parameters": [
          {
            "name": "HIN",
            "in": "query",
            "description": "HIN (hibit chain identity number)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "status to filter the orders, if null, means all statuses.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Ex3.Repository.History.Entities.OrderStatus"
              }
            }
          },
          {
            "name": "MarketId",
            "in": "query",
            "description": "marketId, if null, means all markets",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderIds",
            "in": "query",
            "description": "order ids, if null, means not filter by order ids.\r\nMax length is 20, if more than 20, return error.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Order id",
                "format": "string"
              }
            }
          },
          {
            "name": "OrderCategory",
            "in": "query",
            "description": "order category, if null, means all categories.",
            "schema": {
              "$ref": "#/components/schemas/Ex3.Models.OrderCategory"
            }
          },
          {
            "name": "OrderSide",
            "in": "query",
            "description": "order side, if null, means all sides.",
            "schema": {
              "$ref": "#/components/schemas/Ex3.Models.OrderSide"
            }
          },
          {
            "name": "CreatedAtStart",
            "in": "query",
            "description": "order created at after this time",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CreatedAtEnd",
            "in": "query",
            "description": "order created at before this time",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "maximum number of items to return. maximum value is 500.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "number of items to skip before starting to collect the result set.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "the sorting parameters for the list.\n\rsee https://learn.microsoft.com/en-us/azure/search/search-query-odata-orderby#examples for the format of the OrderBy string.\n\r supported sorting parameters are: \"CreatedAt\".\n\rdefault sorting is by \" CreatedAt desc\".",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/order": {
      "get": {
        "tags": ["Orders"],
        "summary": "get order detail",
        "parameters": [
          {
            "name": "OrderId",
            "in": "query",
            "description": "order id",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "ClientOrderId",
            "in": "query",
            "description": "Client order id. Format: \"${HIN}_${nonce}\".\r\nExample: \"10001_123\"",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TxHash",
            "in": "query",
            "description": "tx hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tx/submit-spot-order": {
      "post": {
        "tags": ["Tx"],
        "summary": "Submit a spot order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Transactions.L2Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Transactions.L2Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Transactions.L2Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.IActors.EmptyResultBody, Ex3.Exchange.IActors.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.IActors.EmptyResultBody, Ex3.Exchange.IActors.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.IActors.EmptyResultBody, Ex3.Exchange.IActors.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tx/cancel-spot-order": {
      "post": {
        "tags": ["Tx"],
        "summary": "Cancel a spot order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Transactions.L2Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Transactions.L2Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Transactions.L2Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.IActors.EmptyResultBody, Ex3.Exchange.IActors.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.IActors.EmptyResultBody, Ex3.Exchange.IActors.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.IActors.EmptyResultBody, Ex3.Exchange.IActors.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/wallet/nonce": {
      "get": {
        "tags": ["Wallet"],
        "summary": "Get nonce of wallet",
        "parameters": [
          {
            "name": "HIN",
            "in": "query",
            "description": "HIN, hibit chain identity number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.NonceResult, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.NonceResult, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.NonceResult, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/wallet/balances": {
      "get": {
        "tags": ["Wallet"],
        "summary": "Get balance of wallet",
        "parameters": [
          {
            "name": "HIN",
            "in": "query",
            "description": "HIN, hibit chain identity number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssetId",
            "in": "query",
            "description": "Asset Id (optional), if not provided, return all assets",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[System.Collections.Generic.Dictionary`2[[Ex3.Models.AssetId, Ex3.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[Ex3.Models.OpenApiNumber, Ex3.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[System.Collections.Generic.Dictionary`2[[Ex3.Models.AssetId, Ex3.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[Ex3.Models.OpenApiNumber, Ex3.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[System.Collections.Generic.Dictionary`2[[Ex3.Models.AssetId, Ex3.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[Ex3.Models.OpenApiNumber, Ex3.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/wallet/register": {
      "post": {
        "tags": ["Wallet"],
        "summary": "Register wallet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OriginWalletRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OriginWalletRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OriginWalletRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Microsoft.AspNetCore.Mvc.EmptyResult, Microsoft.AspNetCore.Mvc.Core, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Microsoft.AspNetCore.Mvc.EmptyResult, Microsoft.AspNetCore.Mvc.Core, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Microsoft.AspNetCore.Mvc.EmptyResult, Microsoft.AspNetCore.Mvc.Core, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/wallet/info": {
      "get": {
        "tags": ["Wallet"],
        "summary": "Get wallet registration info",
        "parameters": [
          {
            "name": "Chain",
            "in": "query",
            "description": "The blockchain type of wallet.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PublicKey",
            "in": "query",
            "description": "Public key of the wallet, optional.\r\n<remarks>At least one of PublicKey or Address must be provided.</remarks>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Address",
            "in": "query",
            "description": "The address of the wallet, optional.\r\n<remarks>At least one of PublicKey or Address must be provided.</remarks>",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.WalletRegistrationInfo, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.WalletRegistrationInfo, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.WalletRegistrationInfo, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Ex3.Cache.DepthManager.SpotMarketDepthDataDto": {
        "required": ["asks", "bids"],
        "type": "object",
        "properties": {
          "asks": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Asks are sorted in ascending order by price.\r\n<remarks>\r\nIn each list, the first element is the price and the second element is the volume.\r\n</remarks>",
            "nullable": true
          },
          "bids": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Bids are sorted in descending order by price.\r\n<remarks>\r\nIn each list, the first element is the price and the second element is the volume.\r\n</remarks>",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.IActors.EmptyResultBody": {
        "type": "object",
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.AssetWithdrawFeeInfoDto": {
        "required": ["feeRate", "minFee", "rateDecimal", "rootAssetId", "targetAssetId"],
        "type": "object",
        "properties": {
          "rootAssetId": {
            "type": "string",
            "description": "Root ID of the asset"
          },
          "targetAssetId": {
            "type": "string",
            "description": "ID of the target asset"
          },
          "feeRate": {
            "type": "string",
            "description": "The rate used to calculate withdrawal fees",
            "format": "string"
          },
          "rateDecimal": {
            "type": "string",
            "description": "The decimal precision for the fee rate"
          },
          "minFee": {
            "type": "string",
            "description": "The minimum fee amount that will be charged for withdrawals",
            "format": "string"
          }
        },
        "additionalProperties": false,
        "description": "Asset withdrawal fee information"
      },
      "Ex3.Exchange.OpenApi.AppServices.ChainInfoDto": {
        "required": ["chainId", "depositAddress", "displayName"],
        "type": "object",
        "properties": {
          "chainId": {
            "type": "string",
            "description": "chain id"
          },
          "depositAddress": {
            "type": "string",
            "description": "address for user to deposit",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "display name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "chain information which is supported by the system"
      },
      "Ex3.Exchange.OpenApi.AppServices.DepthIndexEnum": {
        "enum": [1, 2, 3, 4, 5, 6],
        "type": "integer",
        "format": "int32",
        "x-enumNames": ["L1", "L2", "L3", "L4", "L5", "L6"],
        "x-enum-varnames": ["L1", "L2", "L3", "L4", "L5", "L6"],
        "x-enumDescriptions": [null, "L1", "L2", "L3", "L4", "L5", "L6"]
      },
      "Ex3.Exchange.OpenApi.AppServices.Get24HrTickerOutput": {
        "required": ["items"],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.Market24HrTickerItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.Get24HrTickerOutputExtend": {
        "required": ["items"],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.Market24HrTickerExtendItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.GetSwapOutput": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.GetSwapOutputItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.GetSwapOutputItem": {
        "type": "object",
        "properties": {
          "marketId": {
            "type": "string",
            "description": "The market id for which the liquidity information is provided."
          },
          "poolAmount": {
            "type": "string",
            "description": "The total amount of liquidity in the pool."
          },
          "poolVolume": {
            "type": "string",
            "description": "The total volume of liquidity in the pool."
          },
          "poolLiquidity": {
            "type": "string",
            "description": "The liquidity information of the pool.",
            "format": "string"
          }
        },
        "additionalProperties": false,
        "description": "The input for getting liquidity information."
      },
      "Ex3.Exchange.OpenApi.AppServices.KlineItem": {
        "required": ["a", "c", "h", "l", "o", "t", "v"],
        "type": "object",
        "properties": {
          "o": {
            "type": "string",
            "description": "The open price of the trading pair in the last 24 hours."
          },
          "h": {
            "type": "string",
            "description": "The highest price of the trading pair in the last 24 hours."
          },
          "l": {
            "type": "string",
            "description": "The lowest price of the trading pair in the last 24 hours."
          },
          "c": {
            "type": "string",
            "description": "The close price of the trading pair in the last 24 hours."
          },
          "v": {
            "type": "string",
            "description": "The volume of the trading pair in the last 24 hours."
          },
          "a": {
            "type": "string",
            "description": "The amount of the trading pair in the last 24 hours."
          },
          "t": {
            "type": "int64",
            "description": "timestamp of kline",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.Market24HrTickerExtendItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the market id."
          },
          "o": {
            "type": "string",
            "description": "The open price of the trading pair in the last 24 hours."
          },
          "h": {
            "type": "string",
            "description": "The highest price of the trading pair in the last 24 hours."
          },
          "l": {
            "type": "string",
            "description": "The lowest price of the trading pair in the last 24 hours."
          },
          "c": {
            "type": "string",
            "description": "The close price of the trading pair in the last 24 hours."
          },
          "v": {
            "type": "string",
            "description": "The volume of the trading pair in the last 24 hours."
          },
          "a": {
            "type": "string",
            "description": "The amount of the trading pair in the last 24 hours."
          },
          "t": {
            "type": "int64",
            "description": "time of the ticker update.",
            "format": "int64"
          },
          "lpusd": {
            "type": "string",
            "description": "The last price converted to USD."
          },
          "ausd": {
            "type": "string",
            "description": "The 24-hour trading volume in USD."
          },
          "bas": {
            "type": "string",
            "description": "The base asset symbol.",
            "nullable": true
          },
          "qas": {
            "type": "string",
            "description": "The quote asset symbol.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.Market24HrTickerItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the market id."
          },
          "o": {
            "type": "string",
            "description": "The open price of the trading pair in the last 24 hours."
          },
          "h": {
            "type": "string",
            "description": "The highest price of the trading pair in the last 24 hours."
          },
          "l": {
            "type": "string",
            "description": "The lowest price of the trading pair in the last 24 hours."
          },
          "c": {
            "type": "string",
            "description": "The close price of the trading pair in the last 24 hours."
          },
          "v": {
            "type": "string",
            "description": "The volume of the trading pair in the last 24 hours."
          },
          "a": {
            "type": "string",
            "description": "The amount of the trading pair in the last 24 hours."
          },
          "t": {
            "type": "int64",
            "description": "time of the ticker update.",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.MarketInfoItem": {
        "required": ["baseAssetId", "marketId", "marketSymbol", "quoteAssetId"],
        "type": "object",
        "properties": {
          "marketId": {
            "type": "string",
            "description": "The market id."
          },
          "marketSymbol": {
            "type": "string",
            "description": "Market symbol"
          },
          "baseAssetId": {
            "type": "string",
            "description": "The base asset id of the market."
          },
          "quoteAssetId": {
            "type": "string",
            "description": "The quote asset id of the market."
          },
          "depthLevels": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "values of the depth levels",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.MarketTradingHistoryItem": {
        "required": ["a", "p", "t", "takerSide", "v"],
        "type": "object",
        "properties": {
          "maker": {
            "type": "string",
            "description": "The display information of the maker wallet. if null, means the maker is swap pool.",
            "nullable": true
          },
          "taker": {
            "type": "string",
            "description": "The display information of the taker wallet."
          },
          "takerSide": {
            "$ref": "#/components/schemas/Ex3.Models.OrderSide"
          },
          "p": {
            "type": "string",
            "description": "The price at which the trade occurred."
          },
          "v": {
            "type": "string",
            "description": "The volume of the trade."
          },
          "a": {
            "type": "string",
            "description": "The total amount of the trade."
          },
          "t": {
            "type": "int64",
            "description": "The time at which the trade occurred in Unix time milliseconds.",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Represents the result of a trading history entry."
      },
      "Ex3.Exchange.OpenApi.AppServices.NonceResult": {
        "type": "object",
        "properties": {
          "nonce": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Collections.Pooled.PooledList`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderTradeListItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Collections.Pooled, Version=1.0.82.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.WalletOrderTradeListItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Cache.DepthManager.SpotMarketDepthDataDto, Ex3.Cache.DepthManager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Cache.DepthManager.SpotMarketDepthDataDto"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.IActors.EmptyResultBody, Ex3.Exchange.IActors.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Exchange.IActors.EmptyResultBody"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.AssetWithdrawFeeInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.AssetWithdrawFeeInfoDto"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.Get24HrTickerOutput, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.Get24HrTickerOutput"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.Get24HrTickerOutputExtend, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.Get24HrTickerOutputExtend"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.GetSwapOutput, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.GetSwapOutput"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.MarketInfoItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.MarketInfoItem"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.NonceResult, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.NonceResult"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.ProxyKeyResult, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.ProxyKeyResult"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.SystemInfo, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.SystemInfo"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.WalletOrderDto"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Ex3.Exchange.OpenApi.AppServices.WalletRegistrationInfo, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.WalletRegistrationInfo"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Microsoft.AspNetCore.Mvc.EmptyResult, Microsoft.AspNetCore.Mvc.Core, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.EmptyResult"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[System.Collections.Generic.Dictionary`2[[Ex3.Models.AssetId, Ex3.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[Ex3.Models.OpenApiNumber, Ex3.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[System.Collections.Generic.IEnumerable`1[[Ex3.Exchange.OpenApi.AppServices.ChainInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.ChainInfoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[System.Numerics.BigInteger, System.Runtime.Numerics, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "description": "BigInt",
            "format": "string"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.KlineItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.KlineItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.MarketInfoItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.MarketInfoItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.MarketTradingHistoryItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.MarketTradingHistoryItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OpenApiResult`1[[Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], Volo.Abp.Ddd.Application.Contracts, Version=9.1.1.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.OriginWalletRequest": {
        "type": "object",
        "properties": {
          "chain": {
            "type": "string",
            "description": "The block chain type of the wallet."
          },
          "chainNetwork": {
            "type": "string",
            "description": "The network of the block chain."
          },
          "message": {
            "type": "string",
            "description": "The message content of the request, typically a plain text.",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "description": "Gets or sets the cryptographic signature.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a request signed by the origin wallet."
      },
      "Ex3.Exchange.OpenApi.AppServices.ProxyKeyResult": {
        "type": "object",
        "properties": {
          "ex3KeyPair": {
            "$ref": "#/components/schemas/Ex3.Models.Ex3KeyPair"
          },
          "userId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto": {
        "required": [
          "assetId",
          "assetSymbol",
          "chainAssetType",
          "contractAddress",
          "decimalPlaces",
          "displayName",
          "isBaseToken"
        ],
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "ID of the asset."
          },
          "chainId": {
            "type": "string",
            "description": "ID of chain"
          },
          "chainAssetType": {
            "type": "string",
            "description": "Chain asset type"
          },
          "contractAddress": {
            "type": "string",
            "description": "address of smart contract. e.g., eth address for erc20, ticker for krc20"
          },
          "decimalPlaces": {
            "type": "string",
            "description": "decimals"
          },
          "isBaseToken": {
            "type": "boolean",
            "description": "the asset can be used only used as base token if true"
          },
          "displayName": {
            "type": "string",
            "description": "display name",
            "nullable": true
          },
          "assetSymbol": {
            "type": "string",
            "description": "symbol"
          },
          "subAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.SubAssetInfoDto"
            },
            "description": "sub assets",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.SubAssetInfoDto": {
        "required": ["assetId", "chainAssetType", "contractAddress", "decimalPlaces"],
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "ID of the asset."
          },
          "chainId": {
            "type": "string",
            "description": "ID of chain"
          },
          "chainAssetType": {
            "type": "string",
            "description": "Chain asset type"
          },
          "contractAddress": {
            "type": "string",
            "description": "address of smart contract. e.g., eth address for erc20, ticker for krc20"
          },
          "decimalPlaces": {
            "type": "string",
            "description": "decimals"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.SystemInfo": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "description": "the current timestamp in milliseconds since the Unix epoch.",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "system information"
      },
      "Ex3.Exchange.OpenApi.AppServices.WalletOrderDto": {
        "required": ["cat", "fa", "fp", "fv", "hin", "id", "mid", "p", "s", "st", "t", "ta", "tv"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "order id",
            "format": "string"
          },
          "mid": {
            "type": "string",
            "description": "market id"
          },
          "hin": {
            "type": "string",
            "description": "The HIN (Hibit chain identity number) of the wallet"
          },
          "cat": {
            "$ref": "#/components/schemas/Ex3.Models.OrderCategory"
          },
          "s": {
            "$ref": "#/components/schemas/Ex3.Models.OrderSide"
          },
          "fv": {
            "type": "string",
            "description": "volume of the order filled"
          },
          "fa": {
            "type": "string",
            "description": "amount of the order filled"
          },
          "tv": {
            "type": "string",
            "description": "total volume of the order"
          },
          "ta": {
            "type": "string",
            "description": "total amount of the order"
          },
          "fp": {
            "type": "string",
            "description": "price of the order filled"
          },
          "p": {
            "type": "string",
            "description": "price of the order placed"
          },
          "st": {
            "$ref": "#/components/schemas/Ex3.Repository.History.Entities.OrderStatus"
          },
          "t": {
            "type": "int64",
            "description": "submitted time of the order",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.WalletOrderTradeListItem": {
        "required": ["fa", "fp", "fv", "t", "tid", "ts"],
        "type": "object",
        "properties": {
          "tid": {
            "type": "string",
            "description": "trade id",
            "nullable": true
          },
          "fp": {
            "type": "string",
            "description": "filled price"
          },
          "fv": {
            "type": "string",
            "description": "filled volume"
          },
          "fa": {
            "type": "string",
            "description": "filled amount"
          },
          "ts": {
            "$ref": "#/components/schemas/Ex3.Models.OrderSide"
          },
          "t": {
            "type": "int64",
            "description": "time of trade",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Exchange.OpenApi.AppServices.WalletRegistrationInfo": {
        "type": "object",
        "properties": {
          "hin": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ex3.Models.Ex3KeyPair": {
        "type": "object",
        "properties": {
          "privateKeyHex": {
            "type": "string"
          },
          "publicKeyHex": {
            "type": "string"
          },
          "schema": {
            "$ref": "#/components/schemas/Ex3.Models.SignaturesSchema"
          }
        },
        "additionalProperties": false
      },
      "Ex3.Models.KLine.TickSpace": {
        "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "OneMinute",
          "FiveMinutes",
          "FifteenMinutes",
          "ThirtyMinutes",
          "OneHour",
          "FourHours",
          "OneDay",
          "OneWeek",
          "OneMonth"
        ],
        "x-enum-varnames": [
          "OneMinute",
          "FiveMinutes",
          "FifteenMinutes",
          "ThirtyMinutes",
          "OneHour",
          "FourHours",
          "OneDay",
          "OneWeek",
          "OneMonth"
        ],
        "x-enumDescriptions": [
          null,
          "OneMinute",
          "FiveMinutes",
          "FifteenMinutes",
          "ThirtyMinutes",
          "OneHour",
          "FourHours",
          "OneDay",
          "OneWeek",
          "OneMonth"
        ]
      },
      "Ex3.Models.OrderCategory": {
        "enum": [0, 1],
        "type": "integer",
        "description": "Order category",
        "format": "int32",
        "x-enumNames": ["SpotLimitOrder", "SpotSwapOrder"],
        "x-enum-varnames": ["SpotLimitOrder", "SpotSwapOrder"],
        "x-enumDescriptions": ["SpotLimitOrder", "SpotSwapOrder"]
      },
      "Ex3.Models.OrderSide": {
        "enum": [1, 2],
        "type": "integer",
        "description": "Order side",
        "format": "int32",
        "x-enumNames": ["Ask", "Bid"],
        "x-enum-varnames": ["Ask", "Bid"],
        "x-enumDescriptions": [null, "Ask", "Bid"]
      },
      "Ex3.Models.SignaturesSchema": {
        "enum": [1],
        "type": "integer",
        "format": "int32",
        "x-enumNames": ["Secp256k1"],
        "x-enum-varnames": ["Secp256k1"],
        "x-enumDescriptions": [null, "Secp256k1"]
      },
      "Ex3.Repository.History.Entities.OrderStatus": {
        "enum": [0, 1, 2],
        "type": "integer",
        "format": "int32",
        "x-enumNames": ["Created", "Fulfilled", "Cancelled"],
        "x-enum-varnames": ["Created", "Fulfilled", "Cancelled"],
        "x-enumDescriptions": ["Created", "Fulfilled", "Cancelled"]
      },
      "Ex3.Transactions.L2Request": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "nonce": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Microsoft.AspNetCore.Mvc.EmptyResult": {
        "type": "object",
        "additionalProperties": false
      },
      "Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.KlineItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.KlineItem"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.MarketInfoItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.MarketInfoItem"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.MarketTradingHistoryItem, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.MarketTradingHistoryItem"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.RootAssetInfoDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Application.Dtos.PagedResultDto`1[[Ex3.Exchange.OpenApi.AppServices.WalletOrderDto, Ex3.Exchange.OpenApi.AppServices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ex3.Exchange.OpenApi.AppServices.WalletOrderDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.RemoteServiceErrorInfo": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceValidationErrorInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.RemoteServiceErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorInfo"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.RemoteServiceValidationErrorInfo": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Localization.LanguageInfo": {
        "type": "object",
        "properties": {
          "cultureName": {
            "type": "string",
            "nullable": true
          },
          "uiCultureName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "twoLetterISOLanguageName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.NameValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
