// This file is auto-generated by @hey-api/openapi-ts

export type Ex3CacheDepthManagerSpotMarketDepthDataDto = {
  /**
   * Asks are sorted in ascending order by price.
   * <remarks>
   * In each list, the first element is the price and the second element is the volume.
   * </remarks>
   */
  asks: Array<Array<string>> | null;
  /**
   * Bids are sorted in descending order by price.
   * <remarks>
   * In each list, the first element is the price and the second element is the volume.
   * </remarks>
   */
  bids: Array<Array<string>> | null;
};

export type Ex3ExchangeIActorsEmptyResultBody = {
  [key: string]: never;
};

export type Ex3ExchangeOpenApiAbstractionDtosDepthIndexEnum = 1 | 2 | 3 | 4 | 5 | 6;

export type Ex3ExchangeOpenApiAbstractionDtosGet24HrTickerOutput = {
  items: Array<Ex3ExchangeOpenApiAbstractionDtosMarket24HrTickerItem> | null;
};

export type Ex3ExchangeOpenApiAbstractionDtosGet24HrTickerOutputExtend = {
  items: Array<Ex3ExchangeOpenApiAbstractionDtosMarket24HrTickerExtendItem> | null;
};

export type Ex3ExchangeOpenApiAbstractionDtosGetSwapOutput = {
  items?: Array<Ex3ExchangeOpenApiAbstractionDtosGetSwapOutputItem> | null;
};

export type Ex3ExchangeOpenApiAbstractionDtosGetSwapOutputItem = {
  marketId?: string;
  poolAmount?: string;
  poolVolume?: string;
  /**
   * BigInt
   */
  poolLiquidity?: string;
};

export type Ex3ExchangeOpenApiAbstractionDtosKlineItem = {
  o: string;
  h: string;
  l: string;
  c: string;
  v: string;
  a: string;
  /**
   * Unix timestamp in milliseconds
   */
  t: unknown;
};

export type Ex3ExchangeOpenApiAbstractionDtosMarket24HrTickerExtendItem = {
  id?: string;
  o?: string;
  h?: string;
  l?: string;
  c?: string;
  v?: string;
  a?: string;
  /**
   * Unix timestamp in milliseconds
   */
  t?: unknown;
  lpusd?: string;
  ausd?: string;
  bas?: string | null;
  qas?: string | null;
};

export type Ex3ExchangeOpenApiAbstractionDtosMarket24HrTickerItem = {
  id?: string;
  o?: string;
  h?: string;
  l?: string;
  c?: string;
  v?: string;
  a?: string;
  /**
   * Unix timestamp in milliseconds
   */
  t?: unknown;
};

export type Ex3ExchangeOpenApiAbstractionDtosMarketInfoItem = {
  marketId: string;
  marketSymbol: string;
  baseAssetId: string;
  quoteAssetId: string;
  depthLevels?: Array<number> | null;
};

export type Ex3ExchangeOpenApiAbstractionDtosMarketTradingHistoryItem = {
  maker?: string | null;
  taker?: string;
  takerSide: Ex3ModelsOrderSide;
  p: string;
  v: string;
  a: string;
  /**
   * Unix timestamp in milliseconds
   */
  t: unknown;
};

export type Ex3ExchangeOpenApiAbstractionDtosTrySwapInput = {
  marketId?: string;
  exactTokensType?: Ex3TransactionsSwapV2ExactTokensType;
  /**
   * BigInt
   */
  exactTokens?: string;
  side?: Ex3ModelsOrderSide;
  /**
   * BigInt
   */
  minOut?: string | null;
  /**
   * BigInt
   */
  minIn?: string | null;
};

export type Ex3ExchangeOpenApiAbstractionDtosTrySwapResult = {
  /**
   * BigInt
   */
  inputAmount?: string;
  /**
   * BigInt
   */
  outputAmount?: string;
  priceImpactPercentage?: number;
  /**
   * BigInt
   */
  swapFee?: string;
  executionPrice?: string;
};

export type Ex3ExchangeOpenApiAbstractionDtosWalletOrderDto = {
  /**
   * Order id
   */
  id: string;
  mid: string;
  hin: string;
  cat: Ex3ModelsOrderCategory;
  s: Ex3ModelsOrderSide;
  fv: string;
  fa: string;
  tv: string;
  ta: string;
  fp: string;
  p: string;
  st: Ex3RepositoryHistoryEntitiesOrderStatus;
  /**
   * Unix timestamp in milliseconds
   */
  t: unknown;
};

export type Ex3ExchangeOpenApiAbstractionDtosWalletOrderTradeListItem = {
  tid: string | null;
  fp: string;
  fv: string;
  fa: string;
  ts: Ex3ModelsOrderSide;
  /**
   * Unix timestamp in milliseconds
   */
  t: unknown;
};

export type Ex3ExchangeOpenApiAbstractionDtosWithdrawDetailsOutput = {
  txHash?: string | null;
  status?: Ex3RepositoryWithdrawalStatus;
  chain?: string;
  network?: string;
  assetType?: string;
  token?: string;
  originChainTxHash?: string | null;
  /**
   * BigInt
   */
  volume?: string;
  /**
   * BigInt
   */
  fee?: string;
};

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1CollectionsPooledPooledList1Ex3ExchangeOpenApiAbstractionDtosWalletOrderTradeListItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null___CollectionsPooled_Version_10820_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Array<Ex3ExchangeOpenApiAbstractionDtosWalletOrderTradeListItem> | null;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3CacheDepthManagerSpotMarketDepthDataDto_Ex3CacheDepthManager_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3CacheDepthManagerSpotMarketDepthDataDto;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeIActorsEmptyResultBody_Ex3ExchangeIActorsModels_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeIActorsEmptyResultBody;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosGet24HrTickerOutput_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAbstractionDtosGet24HrTickerOutput;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosGet24HrTickerOutputExtend_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAbstractionDtosGet24HrTickerOutputExtend;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosGetSwapOutput_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAbstractionDtosGetSwapOutput;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosMarketInfoItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAbstractionDtosMarketInfoItem;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosTrySwapResult_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAbstractionDtosTrySwapResult;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosWalletOrderDto_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAbstractionDtosWalletOrderDto;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosWithdrawDetailsOutput_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAbstractionDtosWithdrawDetailsOutput;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAppServicesAssetWithdrawFeeInfoDto_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAppServicesAssetWithdrawFeeInfoDto;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAppServicesNonceResult_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAppServicesNonceResult;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAppServicesProxyKeyResult_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAppServicesProxyKeyResult;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAppServicesSystemInfo_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAppServicesSystemInfo;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAppServicesWalletRegistrationInfo_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAppServicesWalletRegistrationInfo;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAppServicesWithdrawOutput_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: Ex3ExchangeOpenApiAppServicesWithdrawOutput;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1MicrosoftAspNetCoreMvcEmptyResult_MicrosoftAspNetCoreMvcCore_Version_9000_Culture_neutral_PublicKeyToken_adb9793829Ddae60 =
  {
    code?: number;
    message?: string | null;
    data?: MicrosoftAspNetCoreMvcEmptyResult;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1SystemCollectionsGenericDictionary2Ex3ModelsAssetId_Ex3Models_Version_1000_Culture_neutral_PublicKeyToken_null__Ex3ModelsOpenApiNumber_Ex3Models_Version_1000_Culture_neutral_PublicKeyToken_null___SystemPrivateCoreLib_Version_9000_Culture_neutral_PublicKeyToken_7Cec85D7Bea7798E =
  {
    code?: number;
    message?: string | null;
    data?: {
      [key: string]: string;
    } | null;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1SystemCollectionsGenericIEnumerable1Ex3ExchangeOpenApiAppServicesChainInfoDto_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null___SystemPrivateCoreLib_Version_9000_Culture_neutral_PublicKeyToken_7Cec85D7Bea7798E =
  {
    code?: number;
    message?: string | null;
    data?: Array<Ex3ExchangeOpenApiAppServicesChainInfoDto> | null;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1SystemCollectionsGenericList1Ex3ExchangeOpenApiAppServicesRootAssetInfoDto_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null___SystemPrivateCoreLib_Version_9000_Culture_neutral_PublicKeyToken_7Cec85D7Bea7798E =
  {
    code?: number;
    message?: string | null;
    data?: Array<Ex3ExchangeOpenApiAppServicesRootAssetInfoDto> | null;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosKlineItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null___VoloAbpDddApplicationContracts_Version_9110_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosKlineItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosMarketInfoItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null___VoloAbpDddApplicationContracts_Version_9110_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosMarketInfoItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosMarketTradingHistoryItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null___VoloAbpDddApplicationContracts_Version_9110_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosMarketTradingHistoryItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosWalletOrderDto_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null___VoloAbpDddApplicationContracts_Version_9110_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosWalletOrderDto_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null;
  };

export type Ex3ExchangeOpenApiAbstractionOpenApiResult1VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAppServicesRootAssetInfoDto_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null___VoloAbpDddApplicationContracts_Version_9110_Culture_neutral_PublicKeyToken_null =
  {
    code?: number;
    message?: string | null;
    data?: VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAppServicesRootAssetInfoDto_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null;
  };

/**
 * Asset withdrawal fee information
 */
export type Ex3ExchangeOpenApiAppServicesAssetWithdrawFeeInfoDto = {
  /**
   * Root ID of the asset
   */
  rootAssetId: string;
  /**
   * ID of the target asset
   */
  targetAssetId: string;
  /**
   * The rate used to calculate withdrawal fees
   */
  feeRate: string;
  /**
   * The decimal precision for the fee rate
   */
  rateDecimal: string;
  /**
   * The minimum fee amount that will be charged for withdrawals
   */
  minFee: string;
};

/**
 * chain information which is supported by the system
 */
export type Ex3ExchangeOpenApiAppServicesChainInfoDto = {
  /**
   * chain id
   */
  chainId: string;
  /**
   * address for user to deposit
   */
  depositAddress: string | null;
  /**
   * display name
   */
  displayName: string | null;
};

export type Ex3ExchangeOpenApiAppServicesNonceResult = {
  nonce?: string;
};

export type Ex3ExchangeOpenApiAppServicesOriginWalletRequest = {
  chain?: string;
  chainNetwork?: string | null;
  message?: string | null;
  signature?: string | null;
};

export type Ex3ExchangeOpenApiAppServicesProxyKeyResult = {
  ex3KeyPair?: Ex3ModelsEx3KeyPair;
  userId?: string;
};

export type Ex3ExchangeOpenApiAppServicesRootAssetInfoDto = {
  /**
   * ID of the asset.
   */
  assetId: string;
  /**
   * ID of chain
   */
  chainId?: string;
  /**
   * Chain asset type
   */
  chainAssetType: string;
  /**
   * address of smart contract. e.g., eth address for erc20, ticker for krc20
   */
  contractAddress: string;
  /**
   * decimals
   */
  decimalPlaces: string;
  /**
   * the asset can be used only used as base token if true
   */
  isBaseToken: boolean;
  /**
   * display name
   */
  displayName: string | null;
  /**
   * symbol
   */
  assetSymbol: string;
  /**
   * sub assets
   */
  subAssets?: Array<Ex3ExchangeOpenApiAppServicesSubAssetInfoDto> | null;
};

export type Ex3ExchangeOpenApiAppServicesSubAssetInfoDto = {
  /**
   * ID of the asset.
   */
  assetId: string;
  /**
   * ID of chain
   */
  chainId?: string;
  /**
   * Chain asset type
   */
  chainAssetType: string;
  /**
   * address of smart contract. e.g., eth address for erc20, ticker for krc20
   */
  contractAddress: string;
  /**
   * decimals
   */
  decimalPlaces: string;
};

/**
 * system information
 */
export type Ex3ExchangeOpenApiAppServicesSystemInfo = {
  /**
   * the current timestamp in milliseconds since the Unix epoch.
   */
  timestamp?: number;
};

export type Ex3ExchangeOpenApiAppServicesWalletRegistrationInfo = {
  hin?: string | null;
};

/**
 * Output model for a withdrawal operation.
 */
export type Ex3ExchangeOpenApiAppServicesWithdrawOutput = {
  /**
   * The transaction hash of the withdrawal.
   */
  txHash?: string | null;
};

export type Ex3ModelsEx3KeyPair = {
  privateKeyHex?: string;
  publicKeyHex?: string;
  schema?: Ex3ModelsSignaturesSchema;
};

export type Ex3ModelsKLineTickSpace = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;

/**
 * Order category
 */
export type Ex3ModelsOrderCategory = 0 | 1;

/**
 * Order side
 */
export type Ex3ModelsOrderSide = 1 | 2;

export type Ex3ModelsSignaturesSchema = 1;

export type Ex3RepositoryHistoryEntitiesOrderStatus = 0 | 1 | 2;

export type Ex3RepositoryWithdrawalStatus = 0 | 1;

export type Ex3TransactionsL2Request = {
  type?: string;
  userId?: string;
  nonce?: string;
  message?: string;
  hash?: string;
  signature?: string;
};

export type Ex3TransactionsSwapV2ExactTokensType = 0 | 1;

export type MicrosoftAspNetCoreMvcEmptyResult = {
  [key: string]: never;
};

export type VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosKlineItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    items?: Array<Ex3ExchangeOpenApiAbstractionDtosKlineItem> | null;
    totalCount?: number;
  };

export type VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosMarketInfoItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    items?: Array<Ex3ExchangeOpenApiAbstractionDtosMarketInfoItem> | null;
    totalCount?: number;
  };

export type VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosMarketTradingHistoryItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    items?: Array<Ex3ExchangeOpenApiAbstractionDtosMarketTradingHistoryItem> | null;
    totalCount?: number;
  };

export type VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosWalletOrderDto_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    items?: Array<Ex3ExchangeOpenApiAbstractionDtosWalletOrderDto> | null;
    totalCount?: number;
  };

export type VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAppServicesRootAssetInfoDto_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null =
  {
    items?: Array<Ex3ExchangeOpenApiAppServicesRootAssetInfoDto> | null;
    totalCount?: number;
  };

export type VoloAbpHttpRemoteServiceErrorInfo = {
  code?: string | null;
  message?: string | null;
  details?: string | null;
  data?: {} | null;
  validationErrors?: Array<VoloAbpHttpRemoteServiceValidationErrorInfo> | null;
};

export type VoloAbpHttpRemoteServiceErrorResponse = {
  error?: VoloAbpHttpRemoteServiceErrorInfo;
};

export type VoloAbpHttpRemoteServiceValidationErrorInfo = {
  message?: string | null;
  members?: Array<string> | null;
};

export type VoloAbpLocalizationLanguageInfo = {
  cultureName?: string | null;
  uiCultureName?: string | null;
  displayName?: string | null;
  readonly twoLetterISOLanguageName?: string | null;
};

export type VoloAbpNameValue = {
  name?: string | null;
  value?: string | null;
};

export type GetV1TimestampData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/v1/timestamp';
};

export type GetV1TimestampErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1TimestampError = GetV1TimestampErrors[keyof GetV1TimestampErrors];

export type GetV1TimestampResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAppServicesSystemInfo_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type GetV1TimestampResponse = GetV1TimestampResponses[keyof GetV1TimestampResponses];

export type GetV1AssetsData = {
  body?: never;
  path?: never;
  query?: {
    ChainIds?: Array<string>;
    ChainAssetTypes?: Array<string>;
    /**
     * maximum number of items to return. maximum value is 500.
     */
    Limit?: number;
    /**
     * number of items to skip before starting to collect the result set.
     */
    Offset?: number;
    /**
     * the sorting parameters for the list.
     *
     * see https://learn.microsoft.com/en-us/azure/search/search-query-odata-orderby#examples for the format of the OrderBy string.
     *
     *  supported sorting parameters are: "AssetId".
     *
     * default sorting is by " AssetId desc".
     */
    OrderBy?: string;
  };
  url: '/v1/assets';
};

export type GetV1AssetsErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1AssetsError = GetV1AssetsErrors[keyof GetV1AssetsErrors];

export type GetV1AssetsResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAppServicesRootAssetInfoDto_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null___VoloAbpDddApplicationContracts_Version_9110_Culture_neutral_PublicKeyToken_null;
};

export type GetV1AssetsResponse = GetV1AssetsResponses[keyof GetV1AssetsResponses];

export type GetV1AssetData = {
  body?: never;
  path?: never;
  query?: {
    AssetId?: string;
    TokenAddress?: string;
  };
  url: '/v1/asset';
};

export type GetV1AssetErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1AssetError = GetV1AssetErrors[keyof GetV1AssetErrors];

export type GetV1AssetResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1SystemCollectionsGenericList1Ex3ExchangeOpenApiAppServicesRootAssetInfoDto_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null___SystemPrivateCoreLib_Version_9000_Culture_neutral_PublicKeyToken_7Cec85D7Bea7798E;
};

export type GetV1AssetResponse = GetV1AssetResponses[keyof GetV1AssetResponses];

export type GetV1AssetWithdrawalFeeData = {
  body?: never;
  path?: never;
  query?: {
    RootAssetId?: string;
    TargetChain?: string;
    TargetChainNetwork?: string;
  };
  url: '/v1/asset/withdrawal-fee';
};

export type GetV1AssetWithdrawalFeeErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1AssetWithdrawalFeeError = GetV1AssetWithdrawalFeeErrors[keyof GetV1AssetWithdrawalFeeErrors];

export type GetV1AssetWithdrawalFeeResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAppServicesAssetWithdrawFeeInfoDto_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type GetV1AssetWithdrawalFeeResponse = GetV1AssetWithdrawalFeeResponses[keyof GetV1AssetWithdrawalFeeResponses];

export type GetV1ChainsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/v1/chains';
};

export type GetV1ChainsErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1ChainsError = GetV1ChainsErrors[keyof GetV1ChainsErrors];

export type GetV1ChainsResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1SystemCollectionsGenericIEnumerable1Ex3ExchangeOpenApiAppServicesChainInfoDto_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null___SystemPrivateCoreLib_Version_9000_Culture_neutral_PublicKeyToken_7Cec85D7Bea7798E;
};

export type GetV1ChainsResponse = GetV1ChainsResponses[keyof GetV1ChainsResponses];

export type GetV1ChainBalancesData = {
  body?: never;
  path?: never;
  query?: {
    AssetId?: string;
  };
  url: '/v1/chain-balances';
};

export type GetV1ChainBalancesErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1ChainBalancesError = GetV1ChainBalancesErrors[keyof GetV1ChainBalancesErrors];

export type GetV1ChainBalancesResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1SystemCollectionsGenericDictionary2Ex3ModelsAssetId_Ex3Models_Version_1000_Culture_neutral_PublicKeyToken_null__Ex3ModelsOpenApiNumber_Ex3Models_Version_1000_Culture_neutral_PublicKeyToken_null___SystemPrivateCoreLib_Version_9000_Culture_neutral_PublicKeyToken_7Cec85D7Bea7798E;
};

export type GetV1ChainBalancesResponse = GetV1ChainBalancesResponses[keyof GetV1ChainBalancesResponses];

export type PostV1ProxyKeyData = {
  body?: Ex3ExchangeOpenApiAppServicesOriginWalletRequest;
  path?: never;
  query?: never;
  url: '/v1/proxy-key';
};

export type PostV1ProxyKeyErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type PostV1ProxyKeyError = PostV1ProxyKeyErrors[keyof PostV1ProxyKeyErrors];

export type PostV1ProxyKeyResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAppServicesProxyKeyResult_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type PostV1ProxyKeyResponse = PostV1ProxyKeyResponses[keyof PostV1ProxyKeyResponses];

export type PostV1ProxyKeyResetData = {
  body?: Ex3ExchangeOpenApiAppServicesOriginWalletRequest;
  path?: never;
  query?: never;
  url: '/v1/proxy-key/reset';
};

export type PostV1ProxyKeyResetErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type PostV1ProxyKeyResetError = PostV1ProxyKeyResetErrors[keyof PostV1ProxyKeyResetErrors];

export type PostV1ProxyKeyResetResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1MicrosoftAspNetCoreMvcEmptyResult_MicrosoftAspNetCoreMvcCore_Version_9000_Culture_neutral_PublicKeyToken_adb9793829Ddae60;
};

export type PostV1ProxyKeyResetResponse = PostV1ProxyKeyResetResponses[keyof PostV1ProxyKeyResetResponses];

export type GetV1MarketDepthData = {
  body?: never;
  path?: never;
  query?: {
    Index?: Ex3ExchangeOpenApiAbstractionDtosDepthIndexEnum;
    MarketId?: string;
    Limit?: number;
  };
  url: '/v1/market/depth';
};

export type GetV1MarketDepthErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1MarketDepthError = GetV1MarketDepthErrors[keyof GetV1MarketDepthErrors];

export type GetV1MarketDepthResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3CacheDepthManagerSpotMarketDepthDataDto_Ex3CacheDepthManager_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type GetV1MarketDepthResponse = GetV1MarketDepthResponses[keyof GetV1MarketDepthResponses];

export type GetV1MarketsSwapData = {
  body?: never;
  path?: never;
  query?: {
    MarketId?: string;
  };
  url: '/v1/markets/swap';
};

export type GetV1MarketsSwapErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1MarketsSwapError = GetV1MarketsSwapErrors[keyof GetV1MarketsSwapErrors];

export type GetV1MarketsSwapResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosGetSwapOutput_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type GetV1MarketsSwapResponse = GetV1MarketsSwapResponses[keyof GetV1MarketsSwapResponses];

export type GetV1MarketsTickerData = {
  body?: never;
  path?: never;
  query?: {
    MarketId?: string;
    ChainIds?: Array<string>;
    ChainAssetTypes?: Array<string>;
  };
  url: '/v1/markets/ticker';
};

export type GetV1MarketsTickerErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1MarketsTickerError = GetV1MarketsTickerErrors[keyof GetV1MarketsTickerErrors];

export type GetV1MarketsTickerResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosGet24HrTickerOutput_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type GetV1MarketsTickerResponse = GetV1MarketsTickerResponses[keyof GetV1MarketsTickerResponses];

export type GetV1MarketsTickerExtendedData = {
  body?: never;
  path?: never;
  query?: {
    MarketId?: string;
    ChainIds?: Array<string>;
    ChainAssetTypes?: Array<string>;
  };
  url: '/v1/markets/ticker/extended';
};

export type GetV1MarketsTickerExtendedErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1MarketsTickerExtendedError = GetV1MarketsTickerExtendedErrors[keyof GetV1MarketsTickerExtendedErrors];

export type GetV1MarketsTickerExtendedResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosGet24HrTickerOutputExtend_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type GetV1MarketsTickerExtendedResponse =
  GetV1MarketsTickerExtendedResponses[keyof GetV1MarketsTickerExtendedResponses];

export type GetV1MarketKlineData = {
  body?: never;
  path?: never;
  query: {
    MarketId: string;
    TickSpace: Ex3ModelsKLineTickSpace;
    /**
     * maximum number of items to return. maximum value is 500.
     */
    Limit?: number;
    /**
     * number of items to skip before starting to collect the result set.
     */
    Offset?: number;
    /**
     * the sorting parameters for the list.
     *
     * see https://learn.microsoft.com/en-us/azure/search/search-query-odata-orderby#examples for the format of the OrderBy string.
     *
     *  supported sorting parameters are: "Timestamp".
     *
     * default sorting is by " Timestamp desc".
     */
    OrderBy?: string;
  };
  url: '/v1/market/kline';
};

export type GetV1MarketKlineErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1MarketKlineError = GetV1MarketKlineErrors[keyof GetV1MarketKlineErrors];

export type GetV1MarketKlineResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosKlineItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null___VoloAbpDddApplicationContracts_Version_9110_Culture_neutral_PublicKeyToken_null;
};

export type GetV1MarketKlineResponse = GetV1MarketKlineResponses[keyof GetV1MarketKlineResponses];

export type GetV1MarketTradeData = {
  body?: never;
  path?: never;
  query: {
    MarketId: string;
    TradedAtStart?: number;
    TradedAtEnd?: number;
    /**
     * maximum number of items to return. maximum value is 500.
     */
    Limit?: number;
    /**
     * number of items to skip before starting to collect the result set.
     */
    Offset?: number;
    /**
     * the sorting parameters for the list.
     *
     * see https://learn.microsoft.com/en-us/azure/search/search-query-odata-orderby#examples for the format of the OrderBy string.
     *
     *  supported sorting parameters are: "TradedAt".
     *
     * default sorting is by " TradedAt desc".
     */
    OrderBy?: string;
  };
  url: '/v1/market/trade';
};

export type GetV1MarketTradeErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1MarketTradeError = GetV1MarketTradeErrors[keyof GetV1MarketTradeErrors];

export type GetV1MarketTradeResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosMarketTradingHistoryItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null___VoloAbpDddApplicationContracts_Version_9110_Culture_neutral_PublicKeyToken_null;
};

export type GetV1MarketTradeResponse = GetV1MarketTradeResponses[keyof GetV1MarketTradeResponses];

export type GetV1MarketsData = {
  body?: never;
  path?: never;
  query?: {
    ChainIds?: Array<string>;
    ChainAssetTypes?: Array<string>;
    BaseAssetId?: string;
    QuoteAssetId?: string;
    /**
     * maximum number of items to return. maximum value is 500.
     */
    Limit?: number;
    /**
     * number of items to skip before starting to collect the result set.
     */
    Offset?: number;
    /**
     * the sorting parameters for the list.
     *
     * see https://learn.microsoft.com/en-us/azure/search/search-query-odata-orderby#examples for the format of the OrderBy string.
     *
     *  supported sorting parameters are: "MarketId".
     *
     * default sorting is by " MarketId desc".
     */
    OrderBy?: string;
  };
  url: '/v1/markets';
};

export type GetV1MarketsErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1MarketsError = GetV1MarketsErrors[keyof GetV1MarketsErrors];

export type GetV1MarketsResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosMarketInfoItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null___VoloAbpDddApplicationContracts_Version_9110_Culture_neutral_PublicKeyToken_null;
};

export type GetV1MarketsResponse = GetV1MarketsResponses[keyof GetV1MarketsResponses];

export type GetV1MarketData = {
  body?: never;
  path?: never;
  query?: {
    MarketId?: string;
  };
  url: '/v1/market';
};

export type GetV1MarketErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1MarketError = GetV1MarketErrors[keyof GetV1MarketErrors];

export type GetV1MarketResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosMarketInfoItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type GetV1MarketResponse = GetV1MarketResponses[keyof GetV1MarketResponses];

export type PostV1MarketTrySwapData = {
  body?: Ex3ExchangeOpenApiAbstractionDtosTrySwapInput;
  path?: never;
  query?: never;
  url: '/v1/market/try-swap';
};

export type PostV1MarketTrySwapErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type PostV1MarketTrySwapError = PostV1MarketTrySwapErrors[keyof PostV1MarketTrySwapErrors];

export type PostV1MarketTrySwapResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosTrySwapResult_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type PostV1MarketTrySwapResponse = PostV1MarketTrySwapResponses[keyof PostV1MarketTrySwapResponses];

export type GetV1OrderTradesData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Order id
     */
    OrderId?: string;
  };
  url: '/v1/order/trades';
};

export type GetV1OrderTradesErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1OrderTradesError = GetV1OrderTradesErrors[keyof GetV1OrderTradesErrors];

export type GetV1OrderTradesResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1CollectionsPooledPooledList1Ex3ExchangeOpenApiAbstractionDtosWalletOrderTradeListItem_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null___CollectionsPooled_Version_10820_Culture_neutral_PublicKeyToken_null;
};

export type GetV1OrderTradesResponse = GetV1OrderTradesResponses[keyof GetV1OrderTradesResponses];

export type GetV1OrdersData = {
  body?: never;
  path?: never;
  query?: {
    HIN?: string;
    Status?: Array<Ex3RepositoryHistoryEntitiesOrderStatus>;
    MarketId?: string;
    OrderIds?: Array<string>;
    /**
     * Order category
     */
    OrderCategory?: Ex3ModelsOrderCategory;
    /**
     * Order side
     */
    OrderSide?: Ex3ModelsOrderSide;
    CreatedAtStart?: number;
    CreatedAtEnd?: number;
    /**
     * maximum number of items to return. maximum value is 500.
     */
    Limit?: number;
    /**
     * number of items to skip before starting to collect the result set.
     */
    Offset?: number;
    /**
     * the sorting parameters for the list.
     *
     * see https://learn.microsoft.com/en-us/azure/search/search-query-odata-orderby#examples for the format of the OrderBy string.
     *
     *  supported sorting parameters are: "CreatedAt".
     *
     * default sorting is by " CreatedAt desc".
     */
    OrderBy?: string;
  };
  url: '/v1/orders';
};

export type GetV1OrdersErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1OrdersError = GetV1OrdersErrors[keyof GetV1OrdersErrors];

export type GetV1OrdersResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1VoloAbpApplicationDtosPagedResultDto1Ex3ExchangeOpenApiAbstractionDtosWalletOrderDto_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null___VoloAbpDddApplicationContracts_Version_9110_Culture_neutral_PublicKeyToken_null;
};

export type GetV1OrdersResponse = GetV1OrdersResponses[keyof GetV1OrdersResponses];

export type GetV1OrderData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Order id
     */
    OrderId?: string;
    ClientOrderId?: string;
    TxHash?: string;
  };
  url: '/v1/order';
};

export type GetV1OrderErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1OrderError = GetV1OrderErrors[keyof GetV1OrderErrors];

export type GetV1OrderResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosWalletOrderDto_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type GetV1OrderResponse = GetV1OrderResponses[keyof GetV1OrderResponses];

export type PostV1TxSubmitSpotOrderData = {
  body?: Ex3TransactionsL2Request;
  path?: never;
  query?: never;
  url: '/v1/tx/submit-spot-order';
};

export type PostV1TxSubmitSpotOrderErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type PostV1TxSubmitSpotOrderError = PostV1TxSubmitSpotOrderErrors[keyof PostV1TxSubmitSpotOrderErrors];

export type PostV1TxSubmitSpotOrderResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeIActorsEmptyResultBody_Ex3ExchangeIActorsModels_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type PostV1TxSubmitSpotOrderResponse = PostV1TxSubmitSpotOrderResponses[keyof PostV1TxSubmitSpotOrderResponses];

export type PostV1TxCancelSpotOrderData = {
  body?: Ex3TransactionsL2Request;
  path?: never;
  query?: never;
  url: '/v1/tx/cancel-spot-order';
};

export type PostV1TxCancelSpotOrderErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type PostV1TxCancelSpotOrderError = PostV1TxCancelSpotOrderErrors[keyof PostV1TxCancelSpotOrderErrors];

export type PostV1TxCancelSpotOrderResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeIActorsEmptyResultBody_Ex3ExchangeIActorsModels_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type PostV1TxCancelSpotOrderResponse = PostV1TxCancelSpotOrderResponses[keyof PostV1TxCancelSpotOrderResponses];

export type GetV1WalletNonceData = {
  body?: never;
  path?: never;
  query?: {
    HIN?: string;
  };
  url: '/v1/wallet/nonce';
};

export type GetV1WalletNonceErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1WalletNonceError = GetV1WalletNonceErrors[keyof GetV1WalletNonceErrors];

export type GetV1WalletNonceResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAppServicesNonceResult_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type GetV1WalletNonceResponse = GetV1WalletNonceResponses[keyof GetV1WalletNonceResponses];

export type GetV1WalletBalancesData = {
  body?: never;
  path?: never;
  query?: {
    HIN?: string;
    AssetId?: string;
  };
  url: '/v1/wallet/balances';
};

export type GetV1WalletBalancesErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1WalletBalancesError = GetV1WalletBalancesErrors[keyof GetV1WalletBalancesErrors];

export type GetV1WalletBalancesResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1SystemCollectionsGenericDictionary2Ex3ModelsAssetId_Ex3Models_Version_1000_Culture_neutral_PublicKeyToken_null__Ex3ModelsOpenApiNumber_Ex3Models_Version_1000_Culture_neutral_PublicKeyToken_null___SystemPrivateCoreLib_Version_9000_Culture_neutral_PublicKeyToken_7Cec85D7Bea7798E;
};

export type GetV1WalletBalancesResponse = GetV1WalletBalancesResponses[keyof GetV1WalletBalancesResponses];

export type PostV1WalletRegisterData = {
  body?: Ex3ExchangeOpenApiAppServicesOriginWalletRequest;
  path?: never;
  query?: never;
  url: '/v1/wallet/register';
};

export type PostV1WalletRegisterErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type PostV1WalletRegisterError = PostV1WalletRegisterErrors[keyof PostV1WalletRegisterErrors];

export type PostV1WalletRegisterResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1MicrosoftAspNetCoreMvcEmptyResult_MicrosoftAspNetCoreMvcCore_Version_9000_Culture_neutral_PublicKeyToken_adb9793829Ddae60;
};

export type PostV1WalletRegisterResponse = PostV1WalletRegisterResponses[keyof PostV1WalletRegisterResponses];

export type GetV1WalletInfoData = {
  body?: never;
  path?: never;
  query?: {
    Chain?: string;
    PublicKey?: string;
    Address?: string;
  };
  url: '/v1/wallet/info';
};

export type GetV1WalletInfoErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1WalletInfoError = GetV1WalletInfoErrors[keyof GetV1WalletInfoErrors];

export type GetV1WalletInfoResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAppServicesWalletRegistrationInfo_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type GetV1WalletInfoResponse = GetV1WalletInfoResponses[keyof GetV1WalletInfoResponses];

export type PostV1WithdrawData = {
  body?: Ex3ExchangeOpenApiAppServicesOriginWalletRequest;
  path?: never;
  query?: never;
  url: '/v1/withdraw';
};

export type PostV1WithdrawErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type PostV1WithdrawError = PostV1WithdrawErrors[keyof PostV1WithdrawErrors];

export type PostV1WithdrawResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAppServicesWithdrawOutput_Ex3ExchangeOpenApiAppServices_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type PostV1WithdrawResponse = PostV1WithdrawResponses[keyof PostV1WithdrawResponses];

export type GetV1WithdrawDetailsData = {
  body?: never;
  path?: never;
  query?: {
    TxHash?: string;
  };
  url: '/v1/withdraw-details';
};

export type GetV1WithdrawDetailsErrors = {
  /**
   * Bad Request
   */
  400: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Unauthorized
   */
  401: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Forbidden
   */
  403: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Found
   */
  404: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Internal Server Error
   */
  500: VoloAbpHttpRemoteServiceErrorResponse;
  /**
   * Not Implemented
   */
  501: VoloAbpHttpRemoteServiceErrorResponse;
};

export type GetV1WithdrawDetailsError = GetV1WithdrawDetailsErrors[keyof GetV1WithdrawDetailsErrors];

export type GetV1WithdrawDetailsResponses = {
  /**
   * OK
   */
  200: Ex3ExchangeOpenApiAbstractionOpenApiResult1Ex3ExchangeOpenApiAbstractionDtosWithdrawDetailsOutput_Ex3ExchangeOpenApiAbstraction_Version_1000_Culture_neutral_PublicKeyToken_null;
};

export type GetV1WithdrawDetailsResponse = GetV1WithdrawDetailsResponses[keyof GetV1WithdrawDetailsResponses];

export type ClientOptions = {
  baseUrl: 'https://testnetopenapi.hibit.app' | 'https://openapi.hibit.app' | (string & {});
};
