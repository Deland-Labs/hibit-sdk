// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type {
  GetV1TimestampData,
  GetV1TimestampResponse,
  GetV1TimestampError,
  GetV1AssetsData,
  GetV1AssetsResponse,
  GetV1AssetsError,
  GetV1AssetData,
  GetV1AssetResponse,
  GetV1AssetError,
  GetV1ChainsData,
  GetV1ChainsResponse,
  GetV1ChainsError,
  GetV1MarketDepthData,
  GetV1MarketDepthResponse,
  GetV1MarketDepthError,
  GetV1MarketsSwapData,
  GetV1MarketsSwapResponse,
  GetV1MarketsSwapError,
  GetV1MarketsTickerData,
  GetV1MarketsTickerResponse,
  GetV1MarketsTickerError,
  GetV1MarketKlineData,
  GetV1MarketKlineResponse,
  GetV1MarketKlineError,
  GetV1MarketTradeData,
  GetV1MarketTradeResponse,
  GetV1MarketTradeError,
  GetV1MarketsData,
  GetV1MarketsResponse,
  GetV1MarketsError,
  GetV1MarketData,
  GetV1MarketResponse,
  GetV1MarketError,
  GetV1OrderTradesData,
  GetV1OrderTradesResponse,
  GetV1OrderTradesError,
  GetV1OrdersData,
  GetV1OrdersResponse,
  GetV1OrdersError,
  GetV1OrderData,
  GetV1OrderResponse,
  GetV1OrderError,
  PostV1TxSubmitSpotOrderData,
  PostV1TxSubmitSpotOrderResponse,
  PostV1TxSubmitSpotOrderError,
  PostV1TxCancelSpotOrderData,
  PostV1TxCancelSpotOrderResponse,
  PostV1TxCancelSpotOrderError,
  GetV1WalletNonceData,
  GetV1WalletNonceResponse,
  GetV1WalletNonceError,
  GetV1WalletBalancesData,
  GetV1WalletBalancesResponse,
  GetV1WalletBalancesError
} from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<
  TData,
  ThrowOnError
> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * get system timestamp
 */
export const getV1Timestamp = <ThrowOnError extends boolean = false>(
  options?: Options<GetV1TimestampData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<GetV1TimestampResponse, GetV1TimestampError, ThrowOnError>({
    url: '/v1/timestamp',
    ...options
  });
};

/**
 * get assets supported by Hibit
 */
export const getV1Assets = <ThrowOnError extends boolean = false>(options?: Options<GetV1AssetsData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).get<GetV1AssetsResponse, GetV1AssetsError, ThrowOnError>({
    url: '/v1/assets',
    ...options
  });
};

/**
 * Get asset information by asset id
 */
export const getV1Asset = <ThrowOnError extends boolean = false>(options?: Options<GetV1AssetData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).get<GetV1AssetResponse, GetV1AssetError, ThrowOnError>({
    url: '/v1/asset',
    ...options
  });
};

/**
 * get all chains supported by Hibit
 */
export const getV1Chains = <ThrowOnError extends boolean = false>(options?: Options<GetV1ChainsData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).get<GetV1ChainsResponse, GetV1ChainsError, ThrowOnError>({
    url: '/v1/chains',
    ...options
  });
};

/**
 * get the depth of the market
 * it is a combination of the orderbook and the swap liquidity.
 */
export const getV1MarketDepth = <ThrowOnError extends boolean = false>(
  options?: Options<GetV1MarketDepthData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<GetV1MarketDepthResponse, GetV1MarketDepthError, ThrowOnError>({
    url: '/v1/market/depth',
    ...options
  });
};

/**
 * get the swap information of the market
 */
export const getV1MarketsSwap = <ThrowOnError extends boolean = false>(
  options?: Options<GetV1MarketsSwapData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<GetV1MarketsSwapResponse, GetV1MarketsSwapError, ThrowOnError>({
    url: '/v1/markets/swap',
    ...options
  });
};

/**
 * get the ticker of the market which is the last 24 hours
 */
export const getV1MarketsTicker = <ThrowOnError extends boolean = false>(
  options?: Options<GetV1MarketsTickerData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<GetV1MarketsTickerResponse, GetV1MarketsTickerError, ThrowOnError>({
    url: '/v1/markets/ticker',
    ...options
  });
};

/**
 * get the kline of the market
 */
export const getV1MarketKline = <ThrowOnError extends boolean = false>(
  options: Options<GetV1MarketKlineData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetV1MarketKlineResponse, GetV1MarketKlineError, ThrowOnError>({
    url: '/v1/market/kline',
    ...options
  });
};

/**
 * get the trade history of the market
 */
export const getV1MarketTrade = <ThrowOnError extends boolean = false>(
  options: Options<GetV1MarketTradeData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<GetV1MarketTradeResponse, GetV1MarketTradeError, ThrowOnError>({
    url: '/v1/market/trade',
    ...options
  });
};

/**
 * get the market list
 */
export const getV1Markets = <ThrowOnError extends boolean = false>(
  options?: Options<GetV1MarketsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<GetV1MarketsResponse, GetV1MarketsError, ThrowOnError>({
    url: '/v1/markets',
    ...options
  });
};

/**
 * get the market by market id
 */
export const getV1Market = <ThrowOnError extends boolean = false>(options?: Options<GetV1MarketData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).get<GetV1MarketResponse, GetV1MarketError, ThrowOnError>({
    url: '/v1/market',
    ...options
  });
};

/**
 * get trades of the order
 */
export const getV1OrderTrades = <ThrowOnError extends boolean = false>(
  options?: Options<GetV1OrderTradesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<GetV1OrderTradesResponse, GetV1OrderTradesError, ThrowOnError>({
    url: '/v1/order/trades',
    ...options
  });
};

/**
 * get orders of wallet
 */
export const getV1Orders = <ThrowOnError extends boolean = false>(options?: Options<GetV1OrdersData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).get<GetV1OrdersResponse, GetV1OrdersError, ThrowOnError>({
    url: '/v1/orders',
    ...options
  });
};

/**
 * get order detail
 */
export const getV1Order = <ThrowOnError extends boolean = false>(options?: Options<GetV1OrderData, ThrowOnError>) => {
  return (options?.client ?? _heyApiClient).get<GetV1OrderResponse, GetV1OrderError, ThrowOnError>({
    url: '/v1/order',
    ...options
  });
};

/**
 * Submit a spot order
 */
export const postV1TxSubmitSpotOrder = <ThrowOnError extends boolean = false>(
  options?: Options<PostV1TxSubmitSpotOrderData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostV1TxSubmitSpotOrderResponse,
    PostV1TxSubmitSpotOrderError,
    ThrowOnError
  >({
    url: '/v1/tx/submit-spot-order',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers
    }
  });
};

/**
 * Cancel a spot order
 */
export const postV1TxCancelSpotOrder = <ThrowOnError extends boolean = false>(
  options?: Options<PostV1TxCancelSpotOrderData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostV1TxCancelSpotOrderResponse,
    PostV1TxCancelSpotOrderError,
    ThrowOnError
  >({
    url: '/v1/tx/cancel-spot-order',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers
    }
  });
};

/**
 * get nonce of wallet
 */
export const getV1WalletNonce = <ThrowOnError extends boolean = false>(
  options?: Options<GetV1WalletNonceData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<GetV1WalletNonceResponse, GetV1WalletNonceError, ThrowOnError>({
    url: '/v1/wallet/nonce',
    ...options
  });
};

/**
 * get balance of wallet
 */
export const getV1WalletBalances = <ThrowOnError extends boolean = false>(
  options?: Options<GetV1WalletBalancesData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<GetV1WalletBalancesResponse, GetV1WalletBalancesError, ThrowOnError>({
    url: '/v1/wallet/balances',
    ...options
  });
};
